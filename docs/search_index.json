[["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values library(tidyverse) library(patchwork) library(reshape2) # Add NAs to mtcars dataset plot_missing &lt;- function(mycars, percent) { missing_patterns &lt;- data.frame(is.na(mycars)) %&gt;% group_by_all() %&gt;% count(name = &quot;count&quot;, sort = TRUE) %&gt;% ungroup() # count the missing value number of missing patterns countlist &lt;- list() for (name in names(missing_patterns)){ if (name != &quot;count&quot;) { totalMissingCount &lt;- 0 for (i in seq(1,nrow(missing_patterns))) { if(missing_patterns[i,name] == TRUE) { totalMissingCount &lt;- totalMissingCount + missing_patterns$count[i] } } countlist[[name]] &lt;- totalMissingCount } } countlist &lt;- countlist[order(-unlist(countlist))] missingOrder &lt;- names(countlist) missing_var &lt;- data.frame(colSums(is.na(mycars))) colnames(missing_var) &lt;- c(&quot;countNA&quot;) missing_var &lt;- missing_var %&gt;% arrange(desc(missing_var$countNA)) %&gt;% mutate(variable = factor(missingOrder, levels=row.names(missing_var))) missing_patterns_nocount &lt;- subset(missing_patterns, select = -count) # turn it into numeric dataframe mm &lt;- as.matrix(missing_patterns_nocount) m3 &lt;- as.data.frame(mm) completecase_index &lt;- which(rowSums(m3) == 0, arr.ind=TRUE) #find the row of complete case m3[rowSums(m3) == 0,] &lt;- 2 m3$Missing_pattern &lt;- seq(from = 1, to=nrow(m3)) # turn it into pivot_longer m4 &lt;- m3 %&gt;% pivot_longer(!Missing_pattern, names_to = &#39;Val&#39;, values_to = &#39;value&#39; ) m4$Val &lt;- factor(m4$Val, levels = missingOrder) m4$value &lt;- as.factor(m4$value) #plot p1 &lt;- ggplot(m4, aes(x = Val, y = Missing_pattern, fill = value)) + geom_tile(color = &#39;white&#39;, lwd = 0.4, linetype = 1, show.legend = FALSE) + scale_fill_manual(values = c(alpha(&#39;lightgrey&#39;,0.5),alpha(&#39;mediumpurple2&#39;,0.6),alpha(&#39;grey&#39;))) + scale_y_continuous(trans = &quot;reverse&quot;, breaks = seq(1, nrow(m4), len = nrow(m4))) + theme(panel.background = element_blank()) + ylab(&#39;missing pattern&#39;) + xlab(&#39;variable&#39;) + theme(text = element_text(size=7),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) if(percent == TRUE){ missing_var$percentage &lt;- (missing_var$countNA/(sum(missing_var$countNA)/2))*100 p2 &lt;- missing_var %&gt;% ggplot(aes(x=fct_reorder(missing_var$variable, -missing_var$percentage), y = missing_var$percentage)) + geom_bar(stat = &#39;identity&#39;) + geom_col(color = &#39;lightblue&#39;, fill = &#39;lightblue&#39;) + labs(title = &#39;Missing value patterns&#39;, x = &quot; &quot;, y = &quot;% rows missing&quot;) + scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 25)) + theme_bw() + theme(panel.grid.minor.x = element_blank(), panel.grid.major.x = element_blank()) + theme(text = element_text(size=7),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) patterncount &lt;- missing_patterns[ncol(missing_patterns)] patterncount &lt;- patterncount %&gt;% mutate(Tohight = ifelse(1:nrow(patterncount) == completecase_index,&quot;yes&quot;,&quot;no&quot;)) p3 &lt;- patterncount %&gt;% ggplot(aes(x=reorder(row.names(patterncount),(count/sum(count) * 100)), y = (count/sum(count)*100), fill = Tohight)) + geom_bar(stat = &#39;identity&#39;) + scale_fill_manual(values = c(&quot;yes&quot; = &quot;grey&quot;, &quot;no&quot; = &quot;lightblue&quot;), guide = FALSE) + labs(x = &#39; &#39;, y = &#39;row count&#39;) + scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 25)) + coord_flip() + theme_bw() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank()) + theme(axis.text.x = element_text(vjust = 0.5, hjust=1)) }else{ p2 &lt;- missing_var %&gt;% ggplot(aes(x=fct_reorder(missing_var$variable, -missing_var$countNA), y = missing_var$countNA)) + geom_bar(stat = &#39;identity&#39;) + geom_col(color = &#39;lightblue&#39;, fill = &#39;lightblue&#39;) + labs(title = &#39;Missing value patterns&#39;, x = &quot; &quot;, y = &quot;num rows missing&quot;) + theme_bw() + theme(panel.grid.minor.x = element_blank(), panel.grid.major.x = element_blank()) + theme(text = element_text(size=7), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) patterncount &lt;- missing_patterns[ncol(missing_patterns)] patterncount &lt;- patterncount %&gt;% mutate(Tohight = ifelse(1:nrow(patterncount) == completecase_index,&quot;yes&quot;,&quot;no&quot;)) p3 &lt;- patterncount %&gt;% ggplot(aes(x=reorder(row.names(patterncount),count), y = count, fill = Tohight)) + geom_bar(stat = &#39;identity&#39;) + scale_fill_manual(values = c(&quot;yes&quot; = &quot;grey&quot;, &quot;no&quot; = &quot;lightblue&quot;), guide = FALSE) + labs(x = &#39; &#39;, y = &#39;row count&#39;) + coord_flip() + theme_bw() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank()) } patch = (p1 | p3) + plot_layout(widths = c(4, 1)) patch2 = (p2 | plot_spacer()) + plot_layout(widths = c(3, 1)) final_plot &lt;- patch2 / patch + plot_layout(widths = c(4, 1), heights = c(1, 4)) return(final_plot) } df &lt;- read.csv(&quot;zillow_median.csv&quot;) plot_missing(df, percent = TRUE) plot_missing(df, percent = FALSE) For our project, we are analyzing Zillow data &amp; census data to draw parallels between population data &amp; home sale prices. In this missing values section, we used our self-created function to analyze the completeness of the zillow dataset that contains median sale prices by state over time. From looking at the output, here are the main observations: - Overall, we have complete data for 80% of the states. - For most the data that’s missing (~10%+), most of it is in 2021 (Jan to Oct). - There is a small set series of data that is missing 2018 data. However, it’s the least common of 6 patterns. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
